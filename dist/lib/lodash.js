const rsAstralRange = '\\ud800-\\udfff';
const rsComboMarksRange = '\\u0300-\\u036f';
const reComboHalfMarksRange = '\\ufe20-\\ufe2f';
const rsComboSymbolsRange = '\\u20d0-\\u20ff';
const rsComboMarksExtendedRange = '\\u1ab0-\\u1aff';
const rsComboMarksSupplementRange = '\\u1dc0-\\u1dff';
const rsComboRange = rsComboMarksRange +
    reComboHalfMarksRange +
    rsComboSymbolsRange +
    rsComboMarksExtendedRange +
    rsComboMarksSupplementRange;
const rsDingbatRange = '\\u2700-\\u27bf';
const rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff';
const rsMathOpRange = '\\xac\\xb1\\xd7\\xf7';
const rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf';
const rsPunctuationRange = '\\u2000-\\u206f';
const rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000';
const rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde';
const rsVarRange = '\\ufe0e\\ufe0f';
const rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
const rsApos = "['\u2019]";
const rsBreak = `[${rsBreakRange}]`;
const rsCombo = `[${rsComboRange}]`;
const rsDigit = '\\d';
const rsDingbat = `[${rsDingbatRange}]`;
const rsLower = `[${rsLowerRange}]`;
const rsMisc = `[^${rsAstralRange}${rsBreakRange + rsDigit + rsDingbatRange + rsLowerRange + rsUpperRange}]`;
const rsFitz = '\\ud83c[\\udffb-\\udfff]';
const rsModifier = `(?:${rsCombo}|${rsFitz})`;
const rsNonAstral = `[^${rsAstralRange}]`;
const rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}';
const rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]';
const rsUpper = `[${rsUpperRange}]`;
const rsZWJ = '\\u200d';
const rsMiscLower = `(?:${rsLower}|${rsMisc})`;
const rsMiscUpper = `(?:${rsUpper}|${rsMisc})`;
const rsOptContrLower = `(?:${rsApos}(?:d|ll|m|re|s|t|ve))?`;
const rsOptContrUpper = `(?:${rsApos}(?:D|LL|M|RE|S|T|VE))?`;
const reOptMod = `${rsModifier}?`;
const rsOptVar = `[${rsVarRange}]?`;
const rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join('|')})${rsOptVar + reOptMod})*`;
const rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])';
const rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])';
const rsSeq = rsOptVar + reOptMod + rsOptJoin;
const rsEmoji = `(?:${[rsDingbat, rsRegional, rsSurrPair].join('|')})${rsSeq}`;
const rsNonAstralCombo = `${rsNonAstral}${rsCombo}?`;
const rsAstral = `[${rsAstralRange}]`;
const rsSymbol = `(?:${[rsNonAstralCombo, rsCombo, rsRegional, rsSurrPair, rsAstral].join('|')})`;
const reUnicodeWords = RegExp([
    `${rsUpper}?${rsLower}+${rsOptContrLower}(?=${[rsBreak, rsUpper, '$'].join('|')})`,
    `${rsMiscUpper}+${rsOptContrUpper}(?=${[rsBreak, rsUpper + rsMiscLower, '$'].join('|')})`,
    `${rsUpper}?${rsMiscLower}+${rsOptContrLower}`,
    `${rsUpper}+${rsOptContrUpper}`,
    rsOrdUpper,
    rsOrdLower,
    `${rsDigit}+`,
    rsEmoji,
].join('|'), 'g');
const reHasUnicode = RegExp(`[${rsZWJ + rsAstralRange + rsComboRange + rsVarRange}]`);
const reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol + rsSeq}`, 'g');
function unicodeWords(string) {
    return string.match(reUnicodeWords);
}
const hasUnicodeWord = RegExp.prototype.test.bind(/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/);
const reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string) {
    return string.match(reAsciiWord);
}
function words(string, pattern) {
    if (pattern === undefined) {
        const result = hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        return result || [];
    }
    return string.match(pattern) || [];
}
function slice(array, start, end) {
    let length = array == null ? 0 : array.length;
    if (!length) {
        return [];
    }
    start = start == null ? 0 : start;
    end = end === undefined ? length : end;
    if (start < 0) {
        start = -start > length ? 0 : length + start;
    }
    end = end > length ? length : end;
    if (end < 0) {
        end += length;
    }
    length = start > end ? 0 : (end - start) >>> 0;
    start >>>= 0;
    let index = -1;
    const result = new Array(length);
    while (++index < length) {
        result[index] = array[index + start];
    }
    return result;
}
function castSlice(array, start, end) {
    const { length } = array;
    end = end === undefined ? length : end;
    return !start && end >= length ? array : slice(array, start, end);
}
function hasUnicode(string) {
    return reHasUnicode.test(string);
}
function asciiToArray(string) {
    return string.split('');
}
function unicodeToArray(string) {
    return string.match(reUnicode) || [];
}
function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
}
export const upperFirst = (string) => {
    if (!string) {
        return '';
    }
    const strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
    const chr = strSymbols ? strSymbols[0] : string[0];
    const trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
    return chr['toUpperCase']() + trailing;
};
export const camelize = (string) => words(string.replace(/['\u2019]/g, '')).reduce((result, word, index) => {
    word = word.toLowerCase();
    return result + (index ? upperFirst(word) : word);
}, '');
export const snakelize = (string) => words(string.replace(/['\u2019]/g, '')).reduce((result, word, index) => result + (index ? '_' : '') + word.toLowerCase(), '');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9kYXNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliL2xvZGFzaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGFBQWEsR0FBRyxpQkFBaUIsQ0FBQTtBQUN2QyxNQUFNLGlCQUFpQixHQUFHLGlCQUFpQixDQUFBO0FBQzNDLE1BQU0scUJBQXFCLEdBQUcsaUJBQWlCLENBQUE7QUFDL0MsTUFBTSxtQkFBbUIsR0FBRyxpQkFBaUIsQ0FBQTtBQUM3QyxNQUFNLHlCQUF5QixHQUFHLGlCQUFpQixDQUFBO0FBQ25ELE1BQU0sMkJBQTJCLEdBQUcsaUJBQWlCLENBQUE7QUFDckQsTUFBTSxZQUFZLEdBQ2hCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLHlCQUF5QjtJQUN6QiwyQkFBMkIsQ0FBQTtBQUM3QixNQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQTtBQUN4QyxNQUFNLFlBQVksR0FBRywyQkFBMkIsQ0FBQTtBQUNoRCxNQUFNLGFBQWEsR0FBRyxzQkFBc0IsQ0FBQTtBQUM1QyxNQUFNLGNBQWMsR0FBRyw4Q0FBOEMsQ0FBQTtBQUNyRSxNQUFNLGtCQUFrQixHQUFHLGlCQUFpQixDQUFBO0FBQzVDLE1BQU0sWUFBWSxHQUNoQiw4SkFBOEosQ0FBQTtBQUNoSyxNQUFNLFlBQVksR0FBRywyQkFBMkIsQ0FBQTtBQUNoRCxNQUFNLFVBQVUsR0FBRyxnQkFBZ0IsQ0FBQTtBQUNuQyxNQUFNLFlBQVksR0FBRyxhQUFhLEdBQUcsY0FBYyxHQUFHLGtCQUFrQixHQUFHLFlBQVksQ0FBQTtBQUN2RixNQUFNLE1BQU0sR0FBRyxXQUFXLENBQUE7QUFDMUIsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLEdBQUcsQ0FBQTtBQUNuQyxNQUFNLE9BQU8sR0FBRyxJQUFJLFlBQVksR0FBRyxDQUFBO0FBQ25DLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQTtBQUNyQixNQUFNLFNBQVMsR0FBRyxJQUFJLGNB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QUFPLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQTtBQUN4QyxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFjLEVBQUUsRUFBRSxDQUN6QyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQ3JFLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDekIsT0FBTyxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDbkQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO0FBRVIsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsTUFBYyxFQUFFLEVBQUUsQ0FDMUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUM1QyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUN6RSxFQUFFLENBQ0gsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJzQXN0cmFsUmFuZ2UgPSAnXFxcXHVkODAwLVxcXFx1ZGZmZidcbmNvbnN0IHJzQ29tYm9NYXJrc1JhbmdlID0gJ1xcXFx1MDMwMC1cXFxcdTAzNmYnXG5jb25zdCByZUNvbWJvSGFsZk1hcmtzUmFuZ2UgPSAnXFxcXHVmZTIwLVxcXFx1ZmUyZidcbmNvbnN0IHJzQ29tYm9TeW1ib2xzUmFuZ2UgPSAnXFxcXHUyMGQwLVxcXFx1MjBmZidcbmNvbnN0IHJzQ29tYm9NYXJrc0V4dGVuZGVkUmFuZ2UgPSAnXFxcXHUxYWIwLVxcXFx1MWFmZidcbmNvbnN0IHJzQ29tYm9NYXJrc1N1cHBsZW1lbnRSYW5nZSA9ICdcXFxcdTFkYzAtXFxcXHUxZGZmJ1xuY29uc3QgcnNDb21ib1JhbmdlID1cbiAgcnNDb21ib01hcmtzUmFuZ2UgK1xuICByZUNvbWJvSGFsZk1hcmtzUmFuZ2UgK1xuICByc0NvbWJvU3ltYm9sc1JhbmdlICtcbiAgcnNDb21ib01hcmtzRXh0ZW5kZWRSYW5nZSArXG4gIHJzQ29tYm9NYXJrc1N1cHBsZW1lbnRSYW5nZVxuY29uc3QgcnNEaW5nYmF0UmFuZ2UgPSAnXFxcXHUyNzAwLVxcXFx1MjdiZidcbmNvbnN0IHJzTG93ZXJSYW5nZSA9ICdhLXpcXFxceGRmLVxcXFx4ZjZcXFxceGY4LVxcXFx4ZmYnXG5jb25zdCByc01hdGhPcFJhbmdlID0gJ1xcXFx4YWNcXFxceGIxXFxcXHhkN1xcXFx4ZjcnXG5jb25zdCByc05vbkNoYXJSYW5nZSA9ICdcXFxceDAwLVxcXFx4MmZcXFxceDNhLVxcXFx4NDBcXFxceDViLVxcXFx4NjBcXFxceDdiLVxcXFx4YmYnXG5jb25zdCByc1B1bmN0dWF0aW9uUmFuZ2UgPSAnXFxcXHUyMDAwLVxcXFx1MjA2ZidcbmNvbnN0IHJzU3BhY2VSYW5nZSA9XG4gICcgXFxcXHRcXFxceDBiXFxcXGZcXFxceGEwXFxcXHVmZWZmXFxcXG5cXFxcclxcXFx1MjAyOFxcXFx1MjAyOVxcXFx1MTY4MFxcXFx1MTgwZVxcXFx1MjAwMFxcXFx1MjAwMVxcXFx1MjAwMlxcXFx1MjAwM1xcXFx1MjAwNFxcXFx1MjAwNVxcXFx1MjAwNlxcXFx1MjAwN1xcXFx1MjAwOFxcXFx1MjAwOVxcXFx1MjAwYVxcXFx1MjAyZlxcXFx1MjA1ZlxcXFx1MzAwMCdcbmNvbnN0IHJzVXBwZXJSYW5nZSA9ICdBLVpcXFxceGMwLVxcXFx4ZDZcXFxceGQ4LVxcXFx4ZGUnXG5jb25zdCByc1ZhclJhbmdlID0gJ1xcXFx1ZmUwZVxcXFx1ZmUwZidcbmNvbnN0IHJzQnJlYWtSYW5nZSA9IHJzTWF0aE9wUmFuZ2UgKyByc05vbkNoYXJSYW5nZSArIHJzUHVuY3R1YXRpb25SYW5nZSArIHJzU3BhY2VSYW5nZVxuY29uc3QgcnNBcG9zID0gXCJbJ1xcdTIwMTldXCJcbmNvbnN0IHJzQnJlYWsgPSBgWyR7cnNCcmVha1JhbmdlfV1gXG5jb25zdCByc0NvbWJvID0gYFske3JzQ29tYm9SYW5nZX1dYFxuY29uc3QgcnNEaWdpdCA9ICdcXFxcZCdcbmNvbnN0IHJzRGluZ2JhdCA9IGBbJHtyc0RpbmdiYXRSYW5nZX1dYFxuY29uc3QgcnNMb3dlciA9IGBbJHtyc0xvd2VyUmFuZ2V9XWBcbmNvbnN0IHJzTWlzYyA9IGBbXiR7cnNBc3RyYWxSYW5nZX0ke3JzQnJlYWtSYW5nZSArIHJzRGlnaXQgKyByc0RpbmdiYXRSYW5nZSArIHJzTG93ZXJSYW5nZSArIHJzVXBwZXJSYW5nZX1dYFxuY29uc3QgcnNGaXR6ID0gJ1xcXFx1ZDgzY1tcXFxcdWRmZmItXFxcXHVkZmZmXSdcbmNvbnN0IHJzTW9kaWZpZXIgPSBgKD86JHtyc0NvbWJvfXwke3JzRml0en0pYFxuY29uc3QgcnNOb25Bc3RyYWwgPSBgW14ke3JzQXN0cmFsUmFuZ2V9XWBcbmNvbnN0IHJzUmVnaW9uYWwgPSAnKD86XFxcXHVkODNjW1xcXFx1ZGRlNi1cXFxcdWRkZmZdKXsyfSdcbmNvbnN0IHJzU3VyclBhaXIgPSAnW1xcXFx1ZDgwMC1cXFxcdWRiZmZdW1xcXFx1ZGMwMC1cXFxcdWRmZmZdJ1xuY29uc3QgcnNVcHBlciA9IGBbJHtyc1VwcGVyUmFuZ2V9XWBcbmNvbnN0IHJzWldKID0gJ1xcXFx1MjAwZCdcbmNvbnN0IHJzTWlzY0xvd2VyID0gYCg/OiR7cnNMb3dlcn18JHtyc01pc2N9KWBcbmNvbnN0IHJzTWlzY1VwcGVyID0gYCg/OiR7cnNVcHBlcn18JHtyc01pc2N9KWBcbmNvbnN0IHJzT3B0Q29udHJMb3dlciA9IGAoPzoke3JzQXBvc30oPzpkfGxsfG18cmV8c3x0fHZlKSk/YFxuY29uc3QgcnNPcHRDb250clVwcGVyID0gYCg/OiR7cnNBcG9zfSg/OkR8TEx8TXxSRXxTfFR8VkUpKT9gXG5jb25zdCByZU9wdE1vZCA9IGAke3JzTW9kaWZpZXJ9P2BcbmNvbnN0IHJzT3B0VmFyID0gYFske3JzVmFyUmFuZ2V9XT9gXG5jb25zdCByc09wdEpvaW4gPSBgKD86JHtyc1pXSn0oPzoke1tyc05vbkFzdHJhbCwgcnNSZWdpb25hbCwgcnNTdXJyUGFpcl0uam9pbignfCcpfSkke3JzT3B0VmFyICsgcmVPcHRNb2R9KSpgXG5jb25zdCByc09yZExvd2VyID0gJ1xcXFxkKig/OjFzdHwybmR8M3JkfCg/IVsxMjNdKVxcXFxkdGgpKD89XFxcXGJ8W0EtWl9dKSdcbmNvbnN0IHJzT3JkVXBwZXIgPSAnXFxcXGQqKD86MVNUfDJORHwzUkR8KD8hWzEyM10pXFxcXGRUSCkoPz1cXFxcYnxbYS16X10pJ1xuY29uc3QgcnNTZXEgPSByc09wdFZhciArIHJlT3B0TW9kICsgcnNPcHRKb2luXG5jb25zdCByc0Vtb2ppID0gYCg/OiR7W3JzRGluZ2JhdCwgcnNSZWdpb25hbCwgcnNTdXJyUGFpcl0uam9pbignfCcpfSkke3JzU2VxfWBcbmNvbnN0IHJzTm9uQXN0cmFsQ29tYm8gPSBgJHtyc05vbkFzdHJhbH0ke3JzQ29tYm99P2BcbmNvbnN0IHJzQXN0cmFsID0gYFske3JzQXN0cmFsUmFuZ2V9XWBcbmNvbnN0IHJzU3ltYm9sID0gYCg/OiR7W3JzTm9uQXN0cmFsQ29tYm8sIHJzQ29tYm8sIHJzUmVnaW9uYWwsIHJzU3VyclBhaXIsIHJzQXN0cmFsXS5qb2luKCd8Jyl9KWBcbmNvbnN0IHJlVW5pY29kZVdvcmRzID0gUmVnRXhwKFxuICBbXG4gICAgYCR7cnNVcHBlcn0/JHtyc0xvd2VyfSske3JzT3B0Q29udHJMb3dlcn0oPz0ke1tyc0JyZWFrLCByc1VwcGVyLCAnJCddLmpvaW4oJ3wnKX0pYCxcbiAgICBgJHtyc01pc2NVcHBlcn0rJHtyc09wdENvbnRyVXBwZXJ9KD89JHtbcnNCcmVhaywgcnNVcHBlciArIHJzTWlzY0xvd2VyLCAnJCddLmpvaW4oJ3wnKX0pYCxcbiAgICBgJHtyc1VwcGVyfT8ke3JzTWlzY0xvd2VyfSske3JzT3B0Q29udHJMb3dlcn1gLFxuICAgIGAke3JzVXBwZXJ9KyR7cnNPcHRDb250clVwcGVyfWAsXG4gICAgcnNPcmRVcHBlcixcbiAgICByc09yZExvd2VyLFxuICAgIGAke3JzRGlnaXR9K2AsXG4gICAgcnNFbW9qaSxcbiAgXS5qb2luKCd8JyksXG4gICdnJ1xuKVxuY29uc3QgcmVIYXNVbmljb2RlID0gUmVnRXhwKGBbJHtyc1pXSiArIHJzQXN0cmFsUmFuZ2UgKyByc0NvbWJvUmFuZ2UgKyByc1ZhclJhbmdlfV1gKVxuY29uc3QgcmVVbmljb2RlID0gUmVnRXhwKGAke3JzRml0en0oPz0ke3JzRml0en0pfCR7cnNTeW1ib2wgKyByc1NlcX1gLCAnZycpXG5cbmZ1bmN0aW9uIHVuaWNvZGVXb3JkcyhzdHJpbmc6IHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLm1hdGNoKHJlVW5pY29kZVdvcmRzKVxufVxuY29uc3QgaGFzVW5pY29kZVdvcmQgPSBSZWdFeHAucHJvdG90eXBlLnRlc3QuYmluZCgvW2Etel1bQS1aXXxbQS1aXXsyfVthLXpdfFswLTldW2EtekEtWl18W2EtekEtWl1bMC05XXxbXmEtekEtWjAtOSBdLylcbmNvbnN0IHJlQXNjaWlXb3JkID0gL1teXFx4MDAtXFx4MmZcXHgzYS1cXHg0MFxceDViLVxceDYwXFx4N2ItXFx4N2ZdKy9nXG5mdW5jdGlvbiBhc2NpaVdvcmRzKHN0cmluZzogc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcubWF0Y2gocmVBc2NpaVdvcmQpXG59XG5mdW5jdGlvbiB3b3JkcyhzdHJpbmc6IHN0cmluZywgcGF0dGVybj86IHN0cmluZykge1xuICBpZiAocGF0dGVybiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gaGFzVW5pY29kZVdvcmQoc3RyaW5nKSA/IHVuaWNvZGVXb3JkcyhzdHJpbmcpIDogYXNjaWlXb3JkcyhzdHJpbmcpXG4gICAgcmV0dXJuIHJlc3VsdCB8fCBbXVxuICB9XG4gIHJldHVybiBzdHJpbmcubWF0Y2gocGF0dGVybikgfHwgW11cbn1cbmZ1bmN0aW9uIHNsaWNlKGFycmF5OiBhbnksIHN0YXJ0OiBhbnksIGVuZDogYW55KSB7XG4gIGxldCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aFxuICBpZiAoIWxlbmd0aCkge1xuICAgIHJldHVybiBbXVxuICB9XG4gIHN0YXJ0ID0gc3RhcnQgPT0gbnVsbCA/IDAgOiBzdGFydFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IGVuZFxuXG4gIGlmIChzdGFydCA8IDApIHtcbiAgICBzdGFydCA9IC1zdGFydCA+IGxlbmd0aCA/IDAgOiBsZW5ndGggKyBzdGFydFxuICB9XG4gIGVuZCA9IGVuZCA+IGxlbmd0aCA/IGxlbmd0aCA6IGVuZFxuICBpZiAoZW5kIDwgMCkge1xuICAgIGVuZCArPSBsZW5ndGhcbiAgfVxuICBsZW5ndGggPSBzdGFydCA+IGVuZCA/IDAgOiAoZW5kIC0gc3RhcnQpID4+PiAwXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGxldCBpbmRleCA9IC0xXG4gIGNvbnN0IHJlc3VsdCA9IG5ldyBBcnJheShsZW5ndGgpXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGFycmF5W2luZGV4ICsgc3RhcnRdXG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuZnVuY3Rpb24gY2FzdFNsaWNlKGFycmF5OiBhbnksIHN0YXJ0OiBhbnksIGVuZD86IGFueSkge1xuICBjb25zdCB7IGxlbmd0aCB9ID0gYXJyYXlcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiBlbmRcbiAgcmV0dXJuICFzdGFydCAmJiBlbmQgPj0gbGVuZ3RoID8gYXJyYXkgOiBzbGljZShhcnJheSwgc3RhcnQsIGVuZClcbn1cbmZ1bmN0aW9uIGhhc1VuaWNvZGUoc3RyaW5nOiBzdHJpbmcpIHtcbiAgcmV0dXJuIHJlSGFzVW5pY29kZS50ZXN0KHN0cmluZylcbn1cbmZ1bmN0aW9uIGFzY2lpVG9BcnJheShzdHJpbmc6IHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnNwbGl0KCcnKVxufVxuZnVuY3Rpb24gdW5pY29kZVRvQXJyYXkoc3RyaW5nOiBzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5tYXRjaChyZVVuaWNvZGUpIHx8IFtdXG59XG5mdW5jdGlvbiBzdHJpbmdUb0FycmF5KHN0cmluZzogc3RyaW5nKSB7XG4gIHJldHVybiBoYXNVbmljb2RlKHN0cmluZykgPyB1bmljb2RlVG9BcnJheShzdHJpbmcpIDogYXNjaWlUb0FycmF5KHN0cmluZylcbn1cblxuZXhwb3J0IGNvbnN0IHVwcGVyRmlyc3QgPSAoc3RyaW5nOiBzdHJpbmcpID0+IHtcbiAgaWYgKCFzdHJpbmcpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuICBjb25zdCBzdHJTeW1ib2xzID0gaGFzVW5pY29kZShzdHJpbmcpID8gc3RyaW5nVG9BcnJheShzdHJpbmcpIDogdW5kZWZpbmVkXG4gIGNvbnN0IGNociA9IHN0clN5bWJvbHMgPyBzdHJTeW1ib2xzWzBdIDogc3RyaW5nWzBdXG4gIGNvbnN0IHRyYWlsaW5nID0gc3RyU3ltYm9scyA/IGNhc3RTbGljZShzdHJTeW1ib2xzLCAxKS5qb2luKCcnKSA6IHN0cmluZy5zbGljZSgxKVxuICByZXR1cm4gY2hyWyd0b1VwcGVyQ2FzZSddKCkgKyB0cmFpbGluZ1xufVxuXG5leHBvcnQgY29uc3QgY2FtZWxpemUgPSAoc3RyaW5nOiBzdHJpbmcpID0+XG4gIHdvcmRzKHN0cmluZy5yZXBsYWNlKC9bJ1xcdTIwMTldL2csICcnKSkucmVkdWNlKChyZXN1bHQsIHdvcmQsIGluZGV4KSA9PiB7XG4gICAgd29yZCA9IHdvcmQudG9Mb3dlckNhc2UoKVxuICAgIHJldHVybiByZXN1bHQgKyAoaW5kZXggPyB1cHBlckZpcnN0KHdvcmQpIDogd29yZClcbiAgfSwgJycpXG5cbmV4cG9ydCBjb25zdCBzbmFrZWxpemUgPSAoc3RyaW5nOiBzdHJpbmcpID0+XG4gIHdvcmRzKHN0cmluZy5yZXBsYWNlKC9bJ1xcdTIwMTldL2csICcnKSkucmVkdWNlKFxuICAgIChyZXN1bHQsIHdvcmQsIGluZGV4KSA9PiByZXN1bHQgKyAoaW5kZXggPyAnXycgOiAnJykgKyB3b3JkLnRvTG93ZXJDYXNlKCksXG4gICAgJydcbiAgKVxuIl19